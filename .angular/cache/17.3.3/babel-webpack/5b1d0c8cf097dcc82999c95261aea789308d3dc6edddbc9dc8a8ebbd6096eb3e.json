{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nconst _c0 = [\"inputArea\"];\nconst _c1 = [\"output\"];\nconst _c2 = [\"terminal\"];\nconst _c3 = [\"inputPrompt\"];\nexport let TerminalPage = /*#__PURE__*/(() => {\n  var _TerminalPage;\n  class TerminalPage {\n    constructor(ngZone, cdr) {\n      this.ngZone = ngZone;\n      this.cdr = cdr;\n      this.currentFontSize = 14;\n    }\n    ngOnInit() {\n      this.postMessage('user> Enter help for all the commands');\n      this.inputArea.nativeElement.focus();\n    }\n    // @HostListener('document:keydown', ['$event'])\n    // handleKeyDown(event: KeyboardEvent) {\n    //   if (event.key === 'Enter') {\n    //     event.preventDefault();\n    //     const command = this.inputArea.nativeElement.textContent.trim();\n    //     this.postMessage('user> ' + command);\n    //     this.handleCommand(command);\n    //     this.inputArea.nativeElement.textContent = ''; // Clear the contenteditable area\n    //     this.scrollToBottom();\n    //   }\n    // }\n    postMessage(message) {\n      const messageElement = document.createElement('div');\n      messageElement.innerHTML = message.replace(/\\n/g, '<br>'); // Replace newlines with <br> tags\n      messageElement.classList.add('line');\n      this.output.nativeElement.appendChild(messageElement);\n      this.scrollToBottom();\n    }\n    postFlickeringMessage(message) {\n      const messageElement = document.createElement('div');\n      messageElement.innerHTML = message.replace(/\\n/g, '<br>');\n      messageElement.classList.add('line', 'flicker');\n      setTimeout(() => {\n        this.output.nativeElement.appendChild(messageElement);\n        this.scrollToBottom();\n        this.cdr.detectChanges(); // Try moving detectChanges here after the DOM update\n      }, 10); // short delay to ensure DOM is ready\n    }\n    handleCommand(command) {\n      switch (command.toLowerCase()) {\n        case 'help':\n          this.postMessage('user> \\n- get weather\\n- get news');\n          break;\n        case 'flicker':\n          this.postFlickeringMessage('This text is flickering');\n          break;\n        default:\n          // this.postMessage('Unknown command: ' + command);\n          break;\n      }\n    }\n    scrollToBottom() {\n      this.ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.terminal.nativeElement.scrollTop = this.terminal.nativeElement.scrollHeight;\n          this.cdr.detectChanges(); // Trigger change detection manually\n        }, 0);\n      });\n    }\n    increaseTextSize() {\n      this.currentFontSize = Math.min(24, this.currentFontSize + 1); // Set a max font size limit\n      this.updateFontSize();\n    }\n    decreaseTextSize() {\n      this.currentFontSize = Math.max(10, this.currentFontSize - 1); // Set a min font size limit\n      this.updateFontSize();\n    }\n    updateFontSize() {\n      this.output.nativeElement.style.fontSize = `${this.currentFontSize}px`;\n      this.inputArea.nativeElement.style.fontSize = `${this.currentFontSize}px`;\n      this.inputPrompt.nativeElement.style.fontSize = `${this.currentFontSize}px`;\n    }\n    handleKeyDown(event) {\n      console.log(event); // Log the event to see if it is being captured correctly\n      if (event.key === 'Enter') {\n        event.preventDefault();\n        const command = this.inputArea.nativeElement.textContent.trim();\n        this.postMessage('user> ' + command);\n        this.handleCommand(command);\n        this.inputArea.nativeElement.textContent = ''; // Clear the contenteditable area\n        this.scrollToBottom();\n      }\n    }\n  }\n  _TerminalPage = TerminalPage;\n  _TerminalPage.ɵfac = function TerminalPage_Factory(t) {\n    return new (t || _TerminalPage)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  _TerminalPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _TerminalPage,\n    selectors: [[\"app-terminal\"]],\n    viewQuery: function TerminalPage_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n        i0.ɵɵviewQuery(_c2, 7);\n        i0.ɵɵviewQuery(_c3, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputArea = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.output = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.terminal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputPrompt = _t.first);\n      }\n    },\n    hostBindings: function TerminalPage_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function TerminalPage_keydown_HostBindingHandler($event) {\n          return ctx.handleKeyDown($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    decls: 25,\n    vars: 2,\n    consts: [[\"terminal\", \"\"], [\"output\", \"\"], [\"inputPrompt\", \"\"], [\"inputArea\", \"\"], [3, \"translucent\"], [3, \"fullscreen\"], [\"id\", \"terminal\"], [\"src\", \"../../assets/terminal/scanlines.png\", \"id\", \"scan\", 1, \"noselect\"], [\"src\", \"../../assets/terminal/bezel.png\", \"id\", \"bezel\", 1, \"noselect\"], [\"id\", \"content\"], [\"src\", \"../../assets/terminal/strebla_innovation_fallout_font_logo.png\", \"alt\", \"fallout-font\", \"border\", \"0\"], [\"id\", \"output\"], [\"id\", \"inputLine\"], [\"id\", \"inputPrompt\"], [\"id\", \"inputArea\", \"contenteditable\", \"true\"], [2, \"position\", \"absolute\", \"bottom\", \"80px\", \"right\", \"60px\", \"display\", \"flex\", \"flex-direction\", \"column\", \"align-items\", \"center\"], [1, \"transparent-button\", 3, \"click\"], [\"name\", \"add\", 1, \"green-icon\"], [\"name\", \"remove\", 1, \"green-icon\"]],\n    template: function TerminalPage_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelement(0, \"ion-header\", 4);\n        i0.ɵɵelementStart(1, \"ion-content\", 5)(2, \"div\", 6, 0);\n        i0.ɵɵelement(4, \"img\", 7)(5, \"img\", 8);\n        i0.ɵɵelementStart(6, \"div\", 9);\n        i0.ɵɵelement(7, \"img\", 10);\n        i0.ɵɵelementStart(8, \"h1\");\n        i0.ɵɵtext(9, \"Terminal:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"h3\");\n        i0.ɵɵtext(11, \"Version: 1.0.0.0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"div\", 11, 1);\n        i0.ɵɵelementStart(14, \"div\", 12)(15, \"span\", 13, 2);\n        i0.ɵɵtext(17, \"user> \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"div\", 14, 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 15)(21, \"div\", 16);\n        i0.ɵɵlistener(\"click\", function TerminalPage_Template_div_click_21_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.increaseTextSize());\n        });\n        i0.ɵɵelement(22, \"ion-icon\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 16);\n        i0.ɵɵlistener(\"click\", function TerminalPage_Template_div_click_23_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.decreaseTextSize());\n        });\n        i0.ɵɵelement(24, \"ion-icon\", 18);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"fullscreen\", true);\n      }\n    },\n    dependencies: [i1.IonContent, i1.IonHeader, i1.IonIcon],\n    styles: [\"body[_ngcontent-%COMP%], html[_ngcontent-%COMP%]{margin:0;height:100%;background-color:#000;color:#0f0;font-family:Courier New,Courier,monospace}#terminal[_ngcontent-%COMP%], #terminal_content[_ngcontent-%COMP%]{padding:20px;height:100vh;overflow-y:auto;position:relative;width:100vw;background-color:green}#inputLine[_ngcontent-%COMP%]{display:flex;align-items:center}#inputArea[_ngcontent-%COMP%]{flex:1;min-width:0;color:#adff2f;background:transparent;border:none;outline:none;font-family:Courier New,Courier,monospace;white-space:pre-wrap;caret-color:#adff2f;text-shadow:1px 1px 2px rgb(150,167,124),0 0 1em rgb(150,167,124),0 0 .2em rgb(150,167,124);font-family:VT323,monospace;font-size:2vw;z-index:2}#inputPrompt[_ngcontent-%COMP%], .line[_ngcontent-%COMP%]{white-space:pre-wrap}#content[_ngcontent-%COMP%]{position:absolute;top:7%;left:5%;right:5%;bottom:10%;font-family:VT323,monospace;color:#adff2f;font-size:2vw;text-shadow:1px 1px 2px rgb(150,167,124),0 0 1em rgb(150,167,124),0 0 .2em rgb(150,167,124);overflow-y:auto;z-index:2}#scan[_ngcontent-%COMP%], #bezel[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;top:0;left:0;pointer-events:none}#scan[_ngcontent-%COMP%]{opacity:80%;object-fit:cover}@keyframes _ngcontent-%COMP%_blinker{50%{opacity:0}}.flicker[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_blinker 1s linear infinite}.line.flicker[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_blinker 1s linear infinite!important}.line[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_blinker 1s linear infinite}  .flicker{animation:_ngcontent-%COMP%_blinker 1s linear infinite}ion-button[_ngcontent-%COMP%]{--background: transparent !important;--background-activated: transparent !important;--background-focused: transparent !important;--background-hover: transparent !important;--border-color: transparent !important;--ripple-color: transparent !important;--box-shadow: none !important;--outline: none !important;box-shadow:none!important;border:none!important;margin:0!important;padding:0!important}.green-icon[_ngcontent-%COMP%]{color:#9acd32;font-size:24px;pointer-events:none}\"]\n  });\n  return TerminalPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}